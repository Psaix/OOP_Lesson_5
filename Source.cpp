#include <iostream>

//____________________________________________________________________________________________________________
//____________________________________________TASK1___________________________________________________________
//____________________________________________________________________________________________________________


template <class T>
class Pair1 {
private:
	T m_first;
	T m_second;

public:
	Pair1(T first, T second) : m_first(first), m_second(second) {}

	T first() const {
		return m_first;
	}
	T second() const {
		return m_second;
	}
	~Pair1() {}
};



//____________________________________________________________________________________________________________
//____________________________________________TASK2___________________________________________________________
//____________________________________________________________________________________________________________



template <class T, class B>
class Pair {
private:
	T m_first;
	B m_second;

public:
	Pair(T first, B second) : m_first(first), m_second(second) {}

	T first() const {
		return m_first;
	}
	B second() const {
		return m_second;
	}
	~Pair() {}
};



//____________________________________________________________________________________________________________
//____________________________________________TASK3___________________________________________________________
//____________________________________________________________________________________________________________




template <class T2>
class StringValuePair : public Pair <std::string, T2> {
public:
	StringValuePair(std::string string, T2 type) : Pair <std::string, T2> (string, type) {}

};




int main()
{

//____________________________________________TASK1___________________________________________________________

	Pair1<int> p1(6, 9);
	std::cout << "Pair: " << p1.first() << ' ' << p1.second() << '\n';

	const Pair1<double> p2(3.4, 7.8);
	std::cout << "Pair: " << p2.first() << ' ' << p2.second() << '\n';


//____________________________________________TASK2___________________________________________________________


	Pair<int, double> p3(6, 7.8);
	std::cout << "Pair: " << p3.first() << ' ' << p3.second() << '\n';

	const Pair<double, int> p4(3.4, 5);
	std::cout << "Pair: " << p4.first() << ' ' << p4.second() << '\n';
  

//____________________________________________TASK3___________________________________________________________


	StringValuePair<int> svp("Amazing", 7);
	std::cout << "Pair: " << svp.first() << ' ' << svp.second() << '\n';



	return 0;
}
